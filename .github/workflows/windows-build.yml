name: Windows build
on:
  workflow_call:
    inputs:
      repository:
        default: ${{ github.repository }}
        required: false
        type: string
      rime_plugins:
        required: false
        type: string
  workflow_dispatch:
jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [clang]
        include:
          - { compiler: clang, cc: clang, cxx: clang++ }
    env:
      boost_version: 1.84.0
      BOOST_ROOT: ${{ github.workspace }}\deps\boost-1.84.0
      RIME_PLUGINS: ${{ inputs.rime_plugins }}

    steps:
      - name: Checkout last commit
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          submodules: recursive

      - name: Create env.bat
        run: |
          $envfile = ".\env.bat"
          $envcontent = @"
            set RIME_ROOT=%CD%
            set CXX=${{ matrix.cxx }}
            set CC=${{ matrix.cc }}
            set CMAKE_GENERATOR=Ninja
          "@
          Set-Content -Path $envfile -Value $envcontent
          cat $envfile

      - name: Configure Ninja
        run: pip install ninja

      - name: Configure clang
        if: ${{ matrix.compiler == 'clang' }}
        run: choco upgrade -y llvm

      - name: Configure build environment
        run: |
          $git_ref_name = git describe --always
          echo "git_ref_name=$git_ref_name" >> $env:GITHUB_ENV
          git submodule > submodule-status

      - name: Cache Boost source
        id: cache-boost-src
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.BOOST_ROOT }}.7z
          key: ${{ runner.os }}-boost-${{ env.boost_version }}-${{ matrix.compiler }}-src

      - name: Download Boost source
        if: steps.cache-boost-src.outputs.cache-hit != 'true'
        run: |
          aria2c https://github.com/boostorg/boost/releases/download/boost-${{ env.boost_version }}/boost-${{ env.boost_version }}.7z -d deps

      - name: Extract Boost source tarball
        run: |
          pushd deps
          7z x ${{ env.BOOST_ROOT }}.7z
          cd ${{ env.BOOST_ROOT }}
          .\bootstrap.bat
          .\b2 headers
          popd

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            bin
            include
            lib
            share
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ hashFiles('submodule-status') }}

      - name: Build dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: .\build.bat deps

      - name: Install Rime plugins
        run: .\action-install-plugins-windows.bat

      - name: Build and test
        run: .\build.bat test

      - name: Create distributable
        run: |
          7z a rime-${{ env.git_ref_name }}-${{ runner.os }}-${{ matrix.compiler }}.7z `
          dist version-info.txt
          7z a -x'!*/.placeholder' rime-deps-${{ env.git_ref_name }}-${{ runner.os }}-${{ matrix.compiler }}.7z `
          bin include lib share

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: |
            rime-${{ env.git_ref_name }}-${{ runner.os }}-${{ matrix.compiler }}.7z
            rime-deps-${{ env.git_ref_name }}-${{ runner.os }}-${{ matrix.compiler }}.7z
